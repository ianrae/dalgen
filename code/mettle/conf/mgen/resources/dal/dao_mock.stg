header(package) ::= <<
//THIS FILE HAS BEEN AUTO-GENERATED. DO NOT MODIFY.

package <package>;

import java.util.List;
import java.util.ArrayList;
import mef.entities.*;
import mef.daos.*;
import org.mef.framework.binder.IFormBinder;
import org.codehaus.jackson.map.ObjectMapper;
import mef.gen.*;
import org.mef.framework.entitydb.EntityDB;
import java.util.Date;
import com.avaje.ebean.Page;

>>



querydecl(type, fieldType, name, eq) ::= <<
//query
    @Override
    public <type> find_by_<name>(<fieldType> val) 
    {
		<type> user = _entityDB.findFirstMatch(_L, "<name>", val);
		return user;
    }
>>

methoddecl(meth) ::= <<
//method
public <meth>
{
	return null;
}
>>


classdecl(name, type) ::= <<
public class <name> implements I<type>DAO
{
    protected List\<<type>\> _L = new ArrayList\<<type>\>();
    protected EntityDB\<<type>\> _entityDB = new EntityDB\<<type>\>();
    
    @Override
    public int size() 
    {
        return _L.size();
    }

    @Override
    public <type> findById(long id) 
    {
    	<type> entity = this.findActualById(id);
    	if (entity != null)
    	{
    		return new <type>(entity); //return copy
        }
        return null; //not found
    }

    protected <type> findActualById(long id) 
    {
        for(<type> entity : _L)
        {
            if (entity.id == id)
            {
                return entity;
            }
        }
        return null; //not found
    }

    @Override
    public List\<<type>\> all() 
    {
        return _L; //ret copy??!!
    }

    @Override
    public void delete(long id) 
    {
        <type> entity = this.findActualById(id);
        if (entity != null)
        {
            _L.remove(entity);
        }
    }

    @Override
    public void save(<type> entity) 
    {
    	if (entity.id == null)
		{
    		entity.id = new Long(0L);
    	}
		
        delete(entity.id); //remove existing
        if (entity.id == 0)
        {
        	entity.id = nextAvailIdNumber();
        }
        
         _L.add(entity);
     }
 
    private Long nextAvailIdNumber() 
    {
    	long used = 0;
        for(<type> entity : _L)
        {
            if (entity.id > used)
            {
                used = entity.id;
            }
        }
        return used + 1;
	}

	@Override
	public void update(<type> entity) 
	{
		this.save(entity);
	}

    @Override
    public void updateFrom(IFormBinder binder) 
    {
    	<type> entity = (<type>) binder.getObject();
    	save(entity);

    }

	
	
>>

endclassdecl() ::= <<
}
>>

sampleloop(items) ::= "<items:{it|<it.id>: <it.lastName>, <it.firstName>\n}>"