header(package, type, extras, willBeOverwritten) ::= <<


package <package>;

import java.util.Map;

import mef.entities.*;
import mef.viewinputs.*;

import org.mef.framework.binder.IFormBinder;


import play.Logger;
import play.data.Form;


>>

fielddecl(type, name, value) ::= <<
    public <name> <name><init(value)>;
>>
init(v) ::= "<if(v)> = <v><endif>"


classdecl(type, name) ::= <<

public class <type>FormBinder implements IFormBinder\<<type>\>
{
	private Form\<<type>\> validationForm = Form.form(<type>.class);
	private Form\<<type>\> filledForm;
	private <type> entity; //set by bind()

	public <type>FormBinder()
	{
	}
	@Override
	public boolean bind() 
	{
		this.filledForm = validationForm.bindFromRequest();
		this.entity = get();
		if (entity != null)
		{
//			String s = entity.validate();
//			if (s != null)
//			{
//				filledForm.reject("entity", s); //add the error
//			}
		}
		
		return ! filledForm.hasErrors();
	}

	@Override
	public <type> get() 
	{
		return entity;
	}
	
	@Override
	public Object getValidationErrors() 
	{
		return filledForm.errors();
	}
	
	@Override
	public Form\<<type>\> getForm() 
	{
		return filledForm;
	}
>>

endclassdecl() ::= <<

}
>>

