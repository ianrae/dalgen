header(package, extras) ::= <<

//THIS FILE HAS BEEN AUTO-GENERATED. DO NOT MODIFY.

package <package>;

import java.util.Date;
import mef.things.*;
import mef.thingworld.ParserHelper;
import mef.thingworld.Thing;
import mef.thingworld.ThingParser;
import org.mef.framework.sfx.SfxContext;
  
<extras; separator="\n">

>>

fielddecl(type, name, value) ::= <<
    public <type> <name><init(value)>;
>>
init(v) ::= "<if(v)> = <v><endif>"

onparse(type, assigns) ::= <<
	protected void onParse(Thing targetParam) throws Exception
	{
		<type> target = (<type>) targetParam;

		<assigns; separator="\n">
	}
>>

onparsethinglist(type, name) ::= <<
 
List\<Thing> tmpL = this.loadList("<name>", <type>.class);
for(Thing thing : tmpL)
{
	target.<name>.add((<type>) thing);
}
>>


onrenderthinglist(type, name) ::= <<
 
if (target.<name> != null)
{
	ListRenderDesc desc = renderListStart("<name>");
	for(<type> thing: target.<name>)
	{
		renderListEl(desc, thing);
	}
	renderListEnd(desc);
}
>>

onrender(type, assigns) ::= <<
	@Override
	protected void onRender(Thing targetParam) 
	{
		<type> target = (<type>) targetParam;

		<assigns; separator="\n">
	}
>>

resolve(type, assigns) ::= <<
	@Override
	protected void resolve(String refName, Thing refObj, Thing targetParam) throws Exception 
	{
		<assigns; separator="\n">
	}
>>        


classdecl(type, name, isParentOfExtended) ::= <<
<if(isParentOfExtended)>
public class <name> extends <name>_GEN
{

<else>
public class <name> extends ThingParser
{
	public TopicParser(SfxContext ctx) 
	{
		super(ctx);
	}

	@Override
	protected Class getTargetClass() 
	{
		return Topic.class;
	}
	@Override
	protected Thing createObj()
	{
		return new Topic();
	}

<endif>

		

>>

endclassdecl() ::= <<
}
>>

