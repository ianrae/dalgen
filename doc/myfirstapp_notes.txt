------------------------------24SepTue
MUSIC
https://soundcloud.com/rustyknuckles/j-b-beverley-hang-me-oh-hang -good example of voice+guitar


PLAY
I find it very hard to remember Angular. I am not a full time developer. I manage a team. I also do some development from time to time. I learned Angular 

and used it a bit. When I came back to it a few weeks later, I found that I didn't recall how to work with it and I had to lookup almost anything I want 

to do. On the other hand, I don't have the same issue with knockout. Having said that, I have used knockout for much longer and that most likely is part 

of the reason (Although, I am not convinced it is the only reason). For knockout, I I plan to use DurandalJS in the future, but haven't yet.

JAVA HASHMAP
http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html
-is thread-safe for read-only operations
" If multiple threads access a hash map concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally."

JAVA GENERICS
http://www.javacodegeeks.com/2011/04/java-generics-quick-tutorial.html
List<Apple> apples = new ArrayList<Apple>();
List<? extends Fruit> fruits = apples;
void eat(List<? extends Fruit> fruits); //will process any type of fruit

CreateReply r = boundary.process(new cmd)


--------------------------26SepThure
MAEVE would have been 20 today

HIBERNATE
-how does it know which fields have changed?
http://stackoverflow.com/questions/8354642/need-to-know-if-each-field-has-changed-how-should-i-model-this-in-hibernate
 AtomicReferenceArray -thread-safe array!
http://stackoverflow.com/questions/8817715/is-hibernate-recognizing-changes-by-the-result-of-the-getter
Envers -wow. good! catches all changes to JPA stuff
--see "15.6. Tracking entity changes at property level" at http://docs.jboss.org/hibernate/core/4.1/devguide/en-US/html/ch15.html#envers-tracking-

properties-changes

http://empire-db.apache.org/empiredb/hibernate.htm alternative to hibernate

http://java.dzone.com/articles/using-a-hibernate-interceptor- -for auditing. can see all sets and saves
http://java-success.blogspot.com/2013/01/hibernate-automatic-dirty-checking-of.html

--------------------------27SepFri
JPA ASSOCIATIONS - Relationships
http://docs.oracle.com/javaee/6/tutorial/doc/bnbqa.html

-simple list is list of non-entities, such as strings
@Entity
public class Person {
    ...
    @ElementCollection(fetch=EAGER)
    protected Set<String> nickname = new HashSet();
    ...
}

-one-to-one  (Husband <-> Wife)
-one-to-many (Coach <-> Players)
-many-to-one (Appartments <-> Landlord)
-many-to-many (Profs <-> Students)

-assocs can be uni-directional. is an "owning" side; (owning side writes the assoc to db and has the foreign key)
-assocs can be bi-directional. is an "owning" side and an "invserse" side
-can specify cascading deletes

-note. jpa Embedded objects allow you to define a class like a C Struct and then use it in many entities.
Embedded objects have no Id -- they are always included inside another object.

http://www.javaworld.com/javaworld/jw-01-2008/jw-01-jpa2.html
Customer
Orders .custId
OrderInvoice .orderId
Products
OrderDetail .orderId, .prodId

OrderInvoice
  @Column(name = "ORDER_ID")
  private long orderId;

  @OneToOne(optional=false)  //optional false means inner join (intersection)
  @JoinColumn(name = "ORDER_ID") 
  private Order order;       

-optional=false when both sides MUST exist.
-optional=true when related object may not exist

  Order invoice.getOrder() does query and returns object

-so this is a uni-directional relationship.  Order has no way to get its invoice.

-to make it bi-directional, add this to Order. targetEntity is the "owning" class in the relationship
  @OneToOne(optional=false,cascade=CascadeType.ALL, mappedBy="order",targetEntity=Invoice.class)
  private Invoice invoice;    
-so do Invoice order.GetInvoice() which does a query to find Invoice where .orderId==this.id

http://www.avaje.org/doc/ebean-userguide.pdf


-ebean transaction log
-computer example running
-eclipse debugging


PLAY EBEAN assoc
Computer many-to-one with Company. (Company means company that built the computer)
Computer has this:
 @ManyToOne
 public Company company;
-means each computer has one company, but one company can build many computers
-db tbl: computer has company_id

-and the main query includes
 .fetch("company")  //which means include my company object

-then company has no ref to computer
-but does expose Map<String,String> options() that gets a list of all companies <id,name>
 that can be used in forms

 @select(
                computerForm("company.id"), 
                options(Company.options), 
                '_label -> "Company", '_default -> "-- Choose a company --",
                '_showConstraints -> false
            )

-since MEF uses modelforms, we don't have to do anything. options(CompanyModel.options)
-DALGEN
<field>@Id Long id</field>
<field>@ManyToOne Company company</field>  --this is an assoc!
-and company can do
<getmap key="id", value="name">options</getlist> 

-view of Computer has to handle .company may be null
@if(computer.company == null) { <em>-</em> } else { @computer.company.name }

DB LOGGING
http://stackoverflow.com/questions/9719601/play-framework-2-0-and-ebean-sql-logging
db.default.logStatements=true
logger.com.jolbox=DEBUG

DB SEED
-2.sql does it!
 -not idemptent though. only works if db is empty when runs

PLAY MODULES
http://www.playframework.com/modules
[associations] Associations by André Pareis
[chronostamp] Chronostamp by Wayson Clown -add dateCreated,dateModified
[cobertura] Cobertura by Julien Bille -coverage tool!
[featureflags] Feature Flags by Ben Verbeken
[formee] Formee by Wayson Clown
[paginate] paginate by Lawrence McAlpin
[playerrors] playerrors by Marius Andra production error tracking
[recordtracking] RecordTracking by Wayson Clown
[scaffold] scaffold by Lawrence McAlpin -codegen tool you can call from play cmd-line
[securepermissions] Secure Permissions Play! module by Stephane Epardaud

PLAY PLUGINS
http://www.objectify.be/wordpress/?tag=play
-create a class. onStart,onStop,enabled
-add to conf/play.plugins file

PLAY MODULES
http://www.objectify.be/wordpress/?p=363
-a mini-app
-mymodel
  samples
  project-code -which has app,conf, etc
  app.conf -keep it but it should be empty. (module config should go in app conf file)
  routes - DELETE it!
  -then create a single class MyLogger (no parent class needed)
  -done. publish to local repo

-now in an app that wants to use the module, add it to build.scala


 I’m just too damn old to learn these shiny new things.

RALLY DISCUSSION GROUPS
-has Notifications feature
 -can enable rules for sending notifications
 -in-app you have a notification viewer
 -also is email and RSS notification
  -email doesn't allow you to reply though
  -all input must be in-app

EBEAN
E:\src\DownloadedStuff\PlayFramework\ebean
-see ExpressionList.java and OrderBy.java
LikeExpression

FLUID INTERFACE

String res = find().all().where("customer.id=3").sort().orderBy().asc();

Qry class
 toString returns results
 where()
 sort
 orderBy
 

find
 Qry all()

OrderBy
 Qry asc()

 
EXPRESSION PARSER
http://docs.spring.io/spring/docs/3.0.x/reference/expressions.html
Inventor tesla = new Inventor("Nikola Tesla", c.getTime(), "Serbian");

ExpressionParser parser = new SpelExpressionParser();
Expression exp = parser.parseExpression("name");
Expression exp = parser.parseExpression("name == 'Nikola Tesla'");
boolean result = exp.getValue(context, Boolean.class);  // evaluates to true

http://code.google.com/p/jexel/

PHONE to USER
   private PhoneModel phone;    
    
    public Phone getPhone() {
    	if (phone == null)
    	{
    		return null;
    	}
    	Phone entity = PhoneDAL.createEntityFromModel(phone);
        return entity;
    }
    public void setPhone(PhoneModel val) {
		this.phone = val;
    	Phone entity = PhoneDAL.createEntityFromModel(phone);
        this.entity.phone = entity;
    }

TO DO
-get extend working in dalgen so don't overwrite user.validate
-get phone added and working with dalgen
-work on OneToOne assoc
 -change createEntityToModel to handle null -dalgen
-dalgen: DAL findById should include .fetch("phone") and all()
-dalgen: support <getmap key="id", value="name">options</getlist> 
-add 2.sql that seeds db

END OF SATURDAY
-making really good progress
-overall tasks are:
 install - github, out-of-box-experience with zip
 docs
 using in a project - codegen for scaffold and dal
 
 code quality 
   -remove _ctx
   -make play module, etc
   
 featues - better query? better unit testing? ?  
 

https://code.google.com/p/mockito/ mock

-bootstrap job
@OnApplicationStart 
public class Bootstrap extends Job { 

    public void doJob() { 
       ... 
    } 

} 
val o=Json.parse("[1,2,3]").as[List[Int]]

https://github.com/FasterXML/jackson
JsonNode json = request().body().asJson();
JsonNode json = request().body().asJson();
MyClass1 obj1 = Json.fromJson(json, MyClass1.class);

http://wiki.fasterxml.com/JacksonInFiveMinutes
C:\ianTools\play\play-2.1.2\repository\local\org.codehaus.jackson\jackson-core-asl\1.9.10\jars
http://wiki.fasterxml.com/JacksonFeatureCreators

MyObject foo = new ObjectMapper().readValue(request().body().asJson(), MyObject.class);

------------------29SepSun
JSON
f you're inheriting from the Model class (as you should), it provides a save() method as well as an ID attribute. When you call save() on an object you got out of the database, it will be updated, and if you call it on a new object it will be saved to the database. It's all automagical!

Phone ph = new PHone... 
save()

user u1 = new User(...)
..us.phone = ph
dal.save

added EntityLoader and mef/conf/user-json1.txt

http://stackoverflow.com/questions/11166484/adding-apache-common-dependency-to-play-framework-2-0

# --- Sample dataset

# --- !Ups

# insert into phone_model (id,name) values (  1,'Apple Inc.');
# insert into phone_model (id,name) values (  2,'Samsung');
# insert into phone_model (id,name) values (  3,'Nokia');
# insert into phone_model (id,name) values (  4,'Blackberry');

# --- !Downs

# delete from phone_model;
# delete from user_model;

OFFICAL PLAY SETUP INSTRUCTIONS

A. INSTALLING MEF
-get meflib.jar
-get tools batch files in your path: dalgen

B. ADDING TO A NEW APP
-create a lib dir and copy in meflib.jar
-edit Build.scala and add
    // Add your own project settings here      
	resolvers += Resolver.file("meflib.jar", file("lib")) transactional()	

-we need commons-io. add it to Build.scala
val appDependencies = Seq(
    // Add your project dependencies here,
    javaCore,
    javaJdbc,
    javaEbean,
    "commons-io" % "commons-io" % "2.3"	
  )

-create your mef.xml file in app root dir

-run app scaffold dir: 
-you create
 Boundary.java
 Initializer.
 
 
 
C. PRESENTER SCAFFOLD
-run whenever creating a new presenter
-creates presenter, reply, binders
-presenter unit test
-you create UserBoundary and add method to Boundary

D. ENTITY CHANGE
-run whenever modify an entity in mef.xml
entities, dal-interface,mock, model classes

E DB SEED 
-db seed. create conf/mef/myfile.txt --json
- id values MUST be 0



---------------------------------30SepMon
java.lang.RuntimeException: There is no HTTP Context available from here.

java.lang.RuntimeException: java.lang.RuntimeException: javax.persistence.PersistenceException: Error with [models.UserModel] It has not been enhanced but it's superClass [class play.db.ebean.Model] is? (You are not allowed to mix enhancement in a single inheritance hierarchy) marker[play.db.ebean.Model] className[models.UserModel]
Caused by: javax.persistence.PersistenceException: Error with [models.UserModel] It has not been enhanced but it's superClass [class play.db.ebean.Model] is? (You are not allowed to mix enhancement in a single inheritance hierarchy) marker[play.db.ebean.Model] className[models.UserModel]

http://blog.matthieuguillermin.fr/2012/03/unit-testing-tricks-for-play-2-0-and-ebean/
download ebean 2.7.3 zip


C:\src\downloadedStuff\play\ebean-2.7.3\ebean-2.7.3\ebean-2.7.3-agent.jar
-javaagent:C:/src/downloadedStuff/play/ebean-2.7.3/ebean-2.7.3/ebean-2.7.3-agent.jar


Configuration error: Configuration error[Cannot register class [models.UserModel] in Ebean server]

aused by: java.lang.VerifyError: (class: models/UserModel, method: setPhone signature: (Lmodels/PhoneModel;)V) Incompatible object argument for function call

RUNNING INTEGRATION TESTS
-i would like to use fake application for 
 -testing real dals
 -view rendering tests
 
Keep getting ebean errors. Ebean works fine when run app, just not when run junit tests with fakeapplication.
set Run Configurations vm setting:
-javaagent:lib/avaje-ebeanorm-agent.jar=debug=3;packages=models.*

-get lots of debug info
-doesn't like accessing this.entiy. inside setters!
-more info here: http://www.avaje.org/doc/ebean-userguide.pdf

PLAY MODULES
https://github.com/playframework/modules.playframework.org
http://www.playframework.com/documentation/2.0.x/Modules  here!
http://mfizz.com/blog/2013/07/play-framework-module-maven-central
https://github.com/mfizz-inc/play-module-twitter  

also see PlayCommands.scala
 val playCommand = Command.command("play", Help("play", ("play", "Enter the play console"), "Welcome to Play " + play.core.PlayVersion.current + """!
 
 http://stackoverflow.com/questions/8833110/how-to-define-arbitrary-tasks-in-the-play-framework-like-ruby-rake
 http://www.scala-sbt.org/release/docs/Detailed-Topics/Tasks
 http://stackoverflow.com/questions/11368995/mixing-scala-and-java-in-play-framework
 http://www.codecommit.com/blog/java/interop-between-java-and-scala
 
 JURGEN CAMPUS TOURS
 http://www3.algonquincollege.com/future-students/campus-tours/
 http://www.centennialcollege.ca/campustours
 
 
 -----------------1OctTue
 AppTwo
 play new AppTwo
 cd AppTwo
 play eclipse
 -now the view render tests run
 -but integration test fails:
 java.lang.RuntimeException: java.lang.RuntimeException: java.lang.NoSuchMethodError: org.apache.http.conn.scheme.Scheme.<init>(Ljava/lang/String;ILorg/apache/http/conn/scheme/SchemeSocketFactory;)V

-then in app.conf
-setup h2 
-uncomment ebean.default="models.*"

Ah, now integration gets a bit further fails on:
javax.persistence.PersistenceException: Error with [models.Flight] It has not been enhanced but it's superClass [class play.db.ebean.Model] is? (You are not allowed to mix enhancement in a single inheritance hierarchy) marker[play.db.ebean.Model] className[models.Flight]

still getting errors after:
-javaagent:lib/avaje-ebeanorm-agent.jar=debug=3;packages=models.*

-javaagent:lib/ebean-2.7.3-agent.jar=debug=3;packages=models.*



package models;

import javax.persistence.Entity;
import javax.persistence.Id;
import javax.validation.Constraint;

import play.data.validation.Constraints.Required;
import play.db.ebean.Model;

good tips here:
http://blog.matthieuguillermin.fr/2012/03/unit-testing-tricks-for-play-2-0-and-ebean/


This works better because it now enhances Model (which is outside app.modeles)
-javaagent:lib/ebean-2.7.3-agent.jar=debug=3

BEANDB
-working on a simple 'db' that is lists of pojos. Then can do queries by
searching and then combining lists with AND,OR
-then add order-by and group

-ebean dates -- can use java.sql.Timestamp data type class.
 @Temporal(TemporalType.TIMESTAMP)
    @Formats.DateTime(pattern="yyyy-MM-dd HH:mm:ss")
    @CreatedTimestamp
    protected Date creationDate;

  http://www.developerscrappad.com/228/java/java-ee/ejb3-jpa-dealing-with-date-time-and-timestamp/

  ---------------------2OctWed
  MORE ON INTEGRATION TESTS NOT WORKING
  -lots of people complaining about it
  -no reply to my post on google group :(
  -this maybe:
  https://groups.google.com/forum/#!searchin/play-framework/integration$20tests$20console/play-framework/fRHXLZi0J1c/A3YNH11lE_gJ

  FILE GEN

?  \myfirstApp\log4j.xml
a  \myfirstApp\mef.xml
  \myfirstApp\app\log4j.xml
p  \myfirstApp\app\boundaries\ApplicationBoundary.java
a  \myfirstApp\app\boundaries\Boundary.java
p  \myfirstApp\app\boundaries\UserBoundary.java
p  \myfirstApp\app\boundaries\binders\HomeFormBinder.java
p  \myfirstApp\app\boundaries\binders\UserFormBinder.java
d  \myfirstApp\app\boundaries\dals\PhoneDAL.java
d  \myfirstApp\app\boundaries\dals\TaskDAL.java
d  \myfirstApp\app\boundaries\dals\UserDAL.java
  \myfirstApp\app\controllers\Application.java
  \myfirstApp\app\controllers\Owner.java
  \myfirstApp\app\controllers\UserC.java
d  \myfirstApp\app\mef\core\EntityLoader.java
a  \myfirstApp\app\mef\core\Initializer.java
d  \myfirstApp\app\mef\dals\IPhoneDAL.java
d  \myfirstApp\app\mef\dals\ITaskDAL.java
d  \myfirstApp\app\mef\dals\IUserDAL.java
d  \myfirstApp\app\mef\dals\mocks\MockPhoneDAL.java
d  \myfirstApp\app\mef\dals\mocks\MockTaskDAL.java
d  \myfirstApp\app\mef\dals\mocks\MockUserDAL.java
d  \myfirstApp\app\mef\entities\Phone.java
d  \myfirstApp\app\mef\entities\Task.java
d  \myfirstApp\app\mef\entities\User.java
d  \myfirstApp\app\mef\gen\AllKnownDALs_GEN.java
d  \myfirstApp\app\mef\gen\MockTaskDAL_GEN.java
d  \myfirstApp\app\mef\gen\MockUserDAL_GEN.java
d  \myfirstApp\app\mef\gen\Phone_GEN.java
d  \myfirstApp\app\mef\gen\User_GEN.java
p  \myfirstApp\app\mef\presenters\HomePagePresenter.java
p  \myfirstApp\app\mef\presenters\UserPresenter.java
p  \myfirstApp\app\mef\presenters\replies\HomePageReply.java
p  \myfirstApp\app\mef\presenters\replies\UserReply.java
d  \myfirstApp\app\models\PhoneModel.java
d  \myfirstApp\app\models\TaskModel.java
d  \myfirstApp\app\models\UserModel.java
  \myfirstApp\app\views\index.scala.html
  \myfirstApp\app\views\main.scala.html
  \myfirstApp\app\views\owner.scala.html
  \myfirstApp\app\views\user.scala.html
  \myfirstApp\app\views\useredit.scala.html
  \myfirstApp\app\views\usernew.scala.html
  \myfirstApp\app\views\usershow.scala.html
  \myfirstApp\conf\application.conf
  \myfirstApp\conf\mef\seed\json-user1.txt
  \myfirstApp\lib\avaje-ebeanorm-agent.jar
  \myfirstApp\lib\ebean-2.7.3-agent.jar
  \myfirstApp\lib\meflib.jar
  \myfirstApp\test\ApplicationTest.java
  \myfirstApp\test\IntegrationTest.java
a  \myfirstApp\test\mef\BasePresenterTest.java
a  \myfirstApp\test\mef\BaseTest.java
  \myfirstApp\test\mef\BinderTests.java
  \myfirstApp\test\mef\FluidDALTests.java
  \myfirstApp\test\mef\FluidTests.java
p  \myfirstApp\test\mef\HomePagePresenterTests.java
  \myfirstApp\test\mef\JsonTests.java
  \myfirstApp\test\mef\OtherTests.java
  \myfirstApp\test\mef\TaskTests.java
  \myfirstApp\test\mef\UserDALTests.java
p  \myfirstApp\test\mef\UserPresenterTests.java
  \myfirstApp\test\testfiles\json-user1.txt
  \myfirstApp\test\testfiles\json-user2.txt
  \myfirstApp\test\testfiles\json1.txt
  \myfirstApp\test\testfiles\json2.txt


----------------3OctThur
avoiding File usage (won't work heroku)
//TESTING BY USING INCLUDED KEYSTORE IN JAR FILE
    String ksPath = "/res/devportal.jks";
    URL jksURL = PostNvp.class.getResource(ksPath);
    File jksStore = new File(jksURL.toURI());
    //TESTING
    